<?php

/*
 * soluble-flexstore library
 *
 * @author    Vanvelthem Sébastien
 * @link      https://github.com/belgattitude/soluble-flexstore
 * @copyright Copyright (c) 2016-2017 Vanvelthem Sébastien
 * @license   MIT License https://github.com/belgattitude/soluble-flexstore/blob/master/LICENSE.md
 *
 */

namespace SolubleTest\FlexStore\Writer\Zend;

use PHPUnit\Framework\TestCase;
use Soluble\FlexStore\Source\Zend\SqlSource;
use Soluble\FlexStore\FlexStore;
use Soluble\FlexStore\Writer\Zend\JsonWriter;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-14 at 13:07:21.
 */
class JsonWriterTest extends TestCase
{
    /**
     * @var JsonWriter
     */
    protected $jsonWriter;

    /**
     * @var SqlSource
     */
    protected $source;

    /**
     * @var \Zend\Db\Adapter\Adapter
     */
    protected $adapter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->adapter = \SolubleTestFactories::getDbAdapter();
        $select = new \Zend\Db\Sql\Select();
        $select->from('product_brand');

        $this->source = new SqlSource($this->adapter, $select);

        $this->jsonWriter = new JsonWriter();
        $this->jsonWriter->setStore(new FlexStore($this->source));
    }

    public function testGetData()
    {
        $data = $this->jsonWriter->getData();
        self::assertJson($data);
        $d = json_decode($data, $assoc = true);
        self::assertArrayHasKey('total', $d);
        self::assertArrayHasKey('start', $d);
        self::assertArrayHasKey('limit', $d);
        self::assertArrayHasKey('data', $d);
        self::assertTrue($d['success']);
        self::assertEquals($d['total'], count($d['data']));
        self::assertArrayNotHasKey('query', $d);
    }

    public function testGetDataWithDebug()
    {
        $this->jsonWriter->setDebug($debug = true);
        $data = $this->jsonWriter->getData();
        self::assertJson($data);
        $d = json_decode($data, $assoc = true);

        self::assertArrayHasKey('query', $d);
    }
}
